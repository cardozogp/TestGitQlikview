///$tab QlikView Deployment Framework
// First Base Variable Include ,Use relative path to 1.init.qvs
// Contains base searchpath in this container
let vG.BasePath=; 
// Basic search for 1.Init.qvs
$(Include=..\..\..\..\InitLink.qvs);
$(Include=..\..\..\InitLink.qvs);
$(Include=..\..\InitLink.qvs);
$(Include=..\InitLink.qvs);
Exit script when '$(vG.BasePath)'= '';



// Locale for English
$(Include=$(vG.LocalePath)\1.US.qvs);

// This Sub will check if a file or folder exists
// Use before load to avoid errors during script load 
// Syntax example in the script:
// call vL.FileExist ('$(vL.MetaDataQVDPath)\SOE.QVD')
// Local Variable vL.FileExist returns false or true
// example usage:
// if vL.FileExist = 'false' then; trace '### DF Did not find file, exit script'; exit script; endif;
$(Include=$(vG.SubPath)\1.FileExist.qvs);

$(Include=$(vG.SubPath)\9.QVDMigration.qvs);
///$tab SETUP
// *******************************************************************
// App:  QVD Generator - Template
// Purpose:  This is a template QVW for use as a QVD Generator
//			 application.   The sample code in each of the middle
//			 tabs of this script would be replaced by your table 
// 			 LOAD logic.   Using a consistent template like this 
//			 will make it easier to maintain and troubleshoot any 
//			 QVD Generators you build for your QlikView deployment.
//			 The script is loading the Northwind Access Database stored in $(vG.ConfigPath)
// *******************************************************************

// ------------------------------------------------------------------------------------------------
// VARIABLES
// ------------------------------------------------------------------------------------------------


// Use QlikView Deployment Framework Variable $(vG.QVDPath)
// Folder for Source QVDs 
If vL.QVDSourcePath=null() then
LET vL.QVDSourcePath = '$(vG.QVDPath)';
endif

If vL.QVDDestinationPath=null() then
// Folder for destination QVDs use 
LET vL.QVDDestinationPath = '$(vG.SharedQVDPath)';
endif

// Check if qvd files exists by using function call vL.FileExist
call vL.FileExist ('$(vL.QVDSourcePath)*.qvd')
if vL.FileExist = 'false' then; trace '### DF Did not find qvd files in $(vL.QVDSourcePath), exit script'; sleep 5000 ;exit script; endif;


call QVDMigration ('$(vL.QVDSourcePath)','$(vL.QVDDestinationPath)','$(vL.SelectedFields)','$(vL.ScrambledFields)','$(vL.Tmp_QVTableName_Suflix)','$(vL.IncludeSubfolders)','$(vL.FileExtension)');


